version: '3.3'
services:
  database:
    image: postgres:16.0-alpine3.18
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    ports:
      - "5432:5432"
    restart:
      always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend_fastapi
      dockerfile: Dockerfile
    env_file:
      - ./backend_fastapi/.env
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend_fastapi/alembic:/app/alembic
      - ./backend_fastapi/src:/app/src

  redis:
    image: redis:6.2.6
    command: redis-server --requirepass ${REDIS_PASSWORD:-secret}
    ports:
      - "6379:6379"
  adminer:
    image: adminer
    ports:
      - "8080:8080"

  client:
    image: node:16.15
    env_file:
      - ./client/.env
    working_dir: /app
    command: sh -c "yarn install && yarn dev"
    volumes:
      - ./client:/app
    ports:
      - "3000:3000"

volumes:
  postgres_data: